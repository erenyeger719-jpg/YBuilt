@tailwind base;
@tailwind components;
@tailwind utilities;

@media (prefers-reduced-motion: reduce) {
  :root {
    --shimmer-animation: none;
  }
}

@media (prefers-reduced-motion: no-preference) {
  :root {
    --shimmer-animation: shimmer 20s linear infinite;
  }
}

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 100%;

  --foreground: 0 0% 0%;

  --border: 0 0% 85%;

  --card: 0 0% 98%;

  --card-foreground: 0 0% 5%;

  --card-border: 0 0% 88%;

  --sidebar: 0 0% 94%;

  --sidebar-foreground: 0 0% 12%;

  --sidebar-border: 0 0% 86%;

  --sidebar-primary: 0 0% 15%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 0 0% 88%;

  --sidebar-accent-foreground: 0 0% 12%;

  --sidebar-ring: 0 0% 20%;

  --popover: 0 0% 92%;

  --popover-foreground: 0 0% 14%;

  --popover-border: 0 0% 84%;

  --primary: 0 0% 8%;

  --primary-foreground: 0 0% 98%;

  --secondary: 0 0% 90%;

  --secondary-foreground: 0 0% 10%;

  --muted: 0 0% 92%;

  --muted-foreground: 0 0% 40%;

  --accent: 0 0% 95%;

  --accent-foreground: 0 0% 10%;

  --destructive: 0 72% 32%;

  --destructive-foreground: 0 0% 98%;

  --input: 0 0% 70%;
  --ring: 0 0% 24%;
  --chart-1: 0 0% 22%;
  --chart-2: 0 0% 28%;
  --chart-3: 0 0% 34%;
  --chart-4: 0 0% 40%;
  --chart-5: 0 0% 46%;

  --font-sans: Open Sans, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Glass and Gloss System */
  --glass-alpha: 0.12;
  --glass-reflection: rgba(255,255,255,0.08);
  --rim-strength: rgba(255,255,255,0.10);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 0 0% 0%;

  --foreground: 0 0% 100%;

  --border: 0 0% 20%;

  --card: 0 0% 5%;

  --card-foreground: 0 0% 95%;

  --card-border: 0 0% 15%;

  --sidebar: 0 0% 10%;

  --sidebar-foreground: 0 0% 88%;

  --sidebar-border: 0 0% 16%;

  --sidebar-primary: 0 0% 18%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 0 0% 14%;

  --sidebar-accent-foreground: 0 0% 90%;

  --sidebar-ring: 0 0% 80%;

  --popover: 0 0% 12%;

  --popover-foreground: 0 0% 86%;

  --popover-border: 0 0% 20%;

  --primary: 0 0% 95%;

  --primary-foreground: 0 0% 5%;

  --secondary: 0 0% 12%;

  --secondary-foreground: 0 0% 92%;

  --muted: 0 0% 10%;

  --muted-foreground: 0 0% 60%;

  --accent: 0 0% 8%;

  --accent-foreground: 0 0% 90%;

  --destructive: 0 72% 32%;

  --destructive-foreground: 0 0% 98%;

  --input: 0 0% 30%;
  --ring: 0 0% 76%;
  --chart-1: 0 0% 78%;
  --chart-2: 0 0% 72%;
  --chart-3: 0 0% 66%;
  --chart-4: 0 0% 60%;
  --chart-5: 0 0% 54%;

  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);

  /* Glass and Gloss System */
  --glass-alpha: 0.12;
  --glass-reflection: rgba(255,255,255,0.08);
  --rim-strength: rgba(255,255,255,0.10);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

/* Library Page Forced Theme - Overrides global theme */
body[data-force-theme="library"] .library-root,
.library-theme {
  /* Force Library color scheme regardless of system theme */
  --lib-bg-right: #000000;
  --lib-bg-center: #E01010;
  --lib-bg-left-start: #CFF2FF;
  --lib-bg-left-end: #9BD6FF;
  --lib-glass-alpha: 0.14;
  --lib-rim: rgba(255,255,255,0.12);
  --lib-text-on-dark: #FFFFFF;
  --lib-text-on-light: #000000;
}

/* Library root background with diagonal glass stripes */
body[data-force-theme="library"] .library-root {
  --r: var(--lib-bg-right);
  --c: var(--lib-bg-center);
  --l1: var(--lib-bg-left-start);
  --l2: var(--lib-bg-left-end);
  background: 
    linear-gradient(120deg, 
      var(--r) 0% 33%, 
      var(--c) 33% 66%, 
      var(--l1) 66% 100%
    );
  background-size: cover;
  position: relative;
  overflow: hidden;
}

/* Glass overlay with matcap reflection */
body[data-force-theme="library"] .library-root::before {
  content: "";
  position: absolute;
  inset: 0;
  background: url('/library-glass-matcap.webp') center/cover no-repeat;
  opacity: 0.14;
  mix-blend-mode: overlay;
  pointer-events: none;
  backdrop-filter: blur(8px) saturate(120%);
}

/* Text backplate for contrast */
.lib-text-backplate {
  background: rgba(0,0,0,0.36);
  padding: 6px 10px;
  border-radius: 8px;
}

/* ========================================
   SETTINGS PAGE THEME (Black → Purple → Sky Blue)
   ======================================== */
body[data-force-theme="settings"] .settings-root,
.settings-theme {
  /* Force Settings color scheme */
  --settings-bg-right: #000000;
  --settings-bg-center: #7A1FF3;
  --settings-bg-left-start: #CFF2FF;
  --settings-bg-left-end: #9BD6FF;
  --settings-glass-alpha: 0.14;
  --settings-rim: rgba(255,255,255,0.12);
  --settings-text-on-dark: #FFFFFF;
  --settings-text-on-light: #000000;
}

/* Settings root background with soft diagonal gradient blend */
body[data-force-theme="settings"] .settings-root {
  --r: var(--settings-bg-right);
  --c: var(--settings-bg-center);
  --l1: var(--settings-bg-left-start);
  --l2: var(--settings-bg-left-end);
  background: 
    linear-gradient(120deg in oklch, 
      var(--r) 0% 40%, 
      var(--c) 40% 70%, 
      var(--l1) 70% 100%
    );
  background-size: cover;
  position: relative;
  overflow: hidden;
}

/* Glass overlay with matcap reflection */
body[data-force-theme="settings"] .settings-root::before {
  content: "";
  position: absolute;
  inset: 0;
  background: url('/settings-glass-matcap.webp') center/cover no-repeat;
  opacity: var(--settings-glass-alpha);
  mix-blend-mode: overlay;
  pointer-events: none;
  backdrop-filter: blur(10px) saturate(130%);
}

/* Settings text on dark backgrounds */
body[data-force-theme="settings"] .settings-text-light {
  color: var(--settings-text-on-dark);
}

/* Settings text on light backgrounds */
body[data-force-theme="settings"] .settings-text-dark {
  color: var(--settings-text-on-light);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: -1;
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    border-radius: inherit;
    z-index: 999;
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }

  /* Glass and Gloss Material System */
  .card-glass {
    background: linear-gradient(180deg, rgba(255,255,255,var(--glass-alpha)), rgba(255,255,255,0.02));
    border: 1px solid var(--rim-strength);
    backdrop-filter: blur(10px) saturate(140%);
    box-shadow: 0 18px 40px rgba(0,0,0,0.6), inset 0 1px 0 rgba(255,255,255,0.02);
    -webkit-backdrop-filter: blur(10px);
    border-radius: 14px;
    position: relative;
    overflow: hidden;
  }

  .gloss-sheen::after {
    content: "";
    position: absolute;
    inset: 0;
    pointer-events: none;
    background: linear-gradient(120deg, rgba(255,255,255,0.12), rgba(255,255,255,0.02) 30%, transparent 60%);
    mix-blend-mode: screen;
    transform: translateY(-30%) rotate(-12deg);
    opacity: 0.9;
  }

  .metal-text {
    background: linear-gradient(180deg, rgba(255,255,255,0.96), rgba(220,220,220,0.65));
    -webkit-background-clip: text;
    background-clip: text;
    color: transparent;
    text-shadow: 0 1px 0 rgba(0,0,0,0.8), 0 10px 30px rgba(0,0,0,0.55);
  }

  .dark .metal-text {
    background: linear-gradient(180deg, rgba(255,255,255,0.96), rgba(220,220,220,0.65));
  }

  /* Diagonal Glass Stripe System */
  .glass-stripe-container {
    position: absolute;
    inset: -20%;
    overflow: hidden;
    transform: rotate(-30deg);
  }

  .glass-stripe {
    position: absolute;
    top: -50%;
    bottom: -50%;
    width: 8%;
    transition: transform 0.3s ease;
  }

  .glass-stripe-white {
    background: linear-gradient(
      90deg,
      rgba(255, 255, 255, 0.15) 0%,
      rgba(255, 255, 255, 0.25) 50%,
      rgba(255, 255, 255, 0.15) 100%
    );
    border-left: 1px solid rgba(255, 255, 255, 0.3);
    border-right: 1px solid rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(8px) saturate(150%) contrast(1.2);
    -webkit-backdrop-filter: blur(8px) saturate(150%) contrast(1.2);
    box-shadow: 
      inset 0 0 20px rgba(255, 255, 255, 0.1),
      0 0 30px rgba(255, 255, 255, 0.05);
  }

  .glass-stripe-black {
    background: linear-gradient(
      90deg,
      rgba(0, 0, 0, 0.4) 0%,
      rgba(0, 0, 0, 0.6) 50%,
      rgba(0, 0, 0, 0.4) 100%
    );
    border-left: 1px solid rgba(0, 0, 0, 0.5);
    border-right: 1px solid rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(8px) saturate(120%) contrast(1.1);
    -webkit-backdrop-filter: blur(8px) saturate(120%) contrast(1.1);
    box-shadow: 
      inset 0 0 20px rgba(0, 0, 0, 0.2),
      0 0 30px rgba(0, 0, 0, 0.15);
  }

  /* Parallax hover effect */
  .glass-stripe-container:hover .glass-stripe {
    transform: translateX(2px);
  }

  /* Reflected headline text */
  .hero-reflection {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: clamp(2.4rem, 5vw, 4rem);
    font-weight: bold;
    text-align: center;
    color: rgba(255, 255, 255, 0.12);
    transform: scaleY(-1) translateY(30%) rotate(30deg);
    filter: blur(2px);
    mix-blend-mode: screen;
    pointer-events: none;
    letter-spacing: -0.02em;
  }

  .dark .hero-reflection {
    color: rgba(255, 255, 255, 0.08);
  }

  /* Shimmer particles along glass edges */
  @keyframes shimmer {
    0%, 100% { opacity: 0; transform: translateY(0); }
    50% { opacity: 1; transform: translateY(-10px); }
  }

  .glass-stripe-white::before,
  .glass-stripe-black::before {
    content: '';
    position: absolute;
    top: 20%;
    right: -1px;
    width: 2px;
    height: 3px;
    background: rgba(255, 255, 255, 0.8);
    border-radius: 50%;
    animation: shimmer 3s ease-in-out infinite;
  }

  .glass-stripe-white::after,
  .glass-stripe-black::after {
    content: '';
    position: absolute;
    bottom: 30%;
    left: -1px;
    width: 2px;
    height: 3px;
    background: rgba(255, 255, 255, 0.6);
    border-radius: 50%;
    animation: shimmer 4s ease-in-out infinite;
    animation-delay: 1s;
  }

  /* Reduced motion support */
  @media (prefers-reduced-motion: reduce) {
    .glass-stripe-container:hover .glass-stripe {
      transform: none;
    }
    
    .glass-stripe-white::before,
    .glass-stripe-black::before,
    .glass-stripe-white::after,
    .glass-stripe-black::after {
      animation: none;
      opacity: 0.3;
    }
  }

/* Logo dropdown — premium glass style (workspace only) */
.logo-menu.workspace {
  min-width: 260px !important;
  background: linear-gradient(180deg, rgba(255,255,255,0.03), rgba(255,255,255,0.01)) !important;
  border: 1px solid rgba(255,255,255,0.06) !important;
  backdrop-filter: blur(10px) saturate(120%) !important;
  box-shadow: 0 10px 30px rgba(0,0,0,0.6) !important;
  border-radius: 12px !important;
  padding: 8px !important;
  color: var(--text-main, #eaeaea) !important;
  font-family: var(--font-display, 'Valmeria','Inter','Poppins',system-ui,sans-serif) !important;
  z-index: 9999 !important;
}

/* menu items: modern spacing */
.logo-menu.workspace [role="menuitem"] {
  display: flex;
  align-items: center;
  justify-content: space-between; /* text left, icon right */
  gap: 12px;
  padding: 10px 12px;
  border-radius: 8px;
  cursor: pointer;
  transition: background .12s ease, transform .06s ease;
}

/* hover/focus states */
.logo-menu.workspace [role="menuitem"]:hover,
.logo-menu.workspace [role="menuitem"]:focus {
  background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));
  transform: translateY(-1px);
  outline: none;
}

/* right-aligned icon: keep "six spaces" effect via margin-left */
.logo-menu.workspace .menu-label { 
  white-space: nowrap; 
  overflow: hidden; 
  text-overflow: ellipsis; 
  flex: 1;
}

.logo-menu.workspace .menu-icon {
  margin-left: 24px; /* ~6 spaces visual gap */
  flex: 0 0 auto;
  width: 20px;
  height: 20px;
  opacity: .95;
  filter: drop-shadow(0 1px 2px rgba(0,0,0,0.45));
}

/* Dark mode adjustments for workspace menu */
.dark .logo-menu.workspace {
  background: linear-gradient(180deg, rgba(255,255,255,0.05), rgba(255,255,255,0.02)) !important;
  border: 1px solid rgba(255,255,255,0.08) !important;
  box-shadow: 0 10px 30px rgba(0,0,0,0.8) !important;
}

.dark .logo-menu.workspace [role="menuitem"]:hover,
.dark .logo-menu.workspace [role="menuitem"]:focus {
  background: linear-gradient(180deg, rgba(255,255,255,0.04), rgba(255,255,255,0.02)) !important;
}
}